name: iOS Build (Simple)

on:
  push:
    branches: [ main, develop, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_ios_simple:
    name: Build iOS App (No Code Signing)
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run tests
      run: flutter test
      continue-on-error: true
      
    - name: Analyze code
      run: flutter analyze
      continue-on-error: true
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Create .env file
      run: |
        touch .env
        echo "API_KEY=test_key" >> .env
        echo "RAPIDAPI_KEY=test_key" >> .env
        echo "GEMINI_API_KEY=test_key" >> .env
        echo "NUTRITIONIX_APP_ID=test_id" >> .env
        echo "NUTRITIONIX_API_KEY=test_key" >> .env
        echo "VISION_API_KEY=test_key" >> .env
        
    - name: Build Flutter iOS (Debug - No Code Sign)
      run: |
        flutter build ios --debug --no-codesign
        
    - name: Create simulator build
      run: |
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Debug \
          -destination generic/platform=iOS \
          -archivePath build/Runner.xcarchive \
          archive \
          CODE_SIGNING_ALLOWED=NO \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_IDENTITY="" \
          PROVISIONING_PROFILE=""
          
    - name: List build artifacts
      run: |
        echo "Build completed successfully!"
        ls -la ios/build/ || echo "No build directory found"
        find ios -name "*.app" -type d || echo "No .app files found"
        
    - name: Create ZIP of app bundle
      run: |
        cd ios
        find . -name "*.app" -type d -exec zip -r SolarVita-iOS-Debug.zip {} \;
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: SolarVita-iOS-Debug
        path: ios/SolarVita-iOS-Debug.zip
        retention-days: 30
        
    - name: Build summary
      run: |
        echo "âœ… iOS build completed successfully!"
        echo "ðŸ“± You can download the artifact and test on appetize.io"
        echo "ðŸ”— The .app bundle is available in the artifacts section"